{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Hackers/VTour/src/components/toursubcomponents/InfoPanel.js\";\nimport React from 'react';\nimport { Box, Button, Layer } from 'grommet';\nimport { Bar, Camera, CirclePlay, CircleQuestion } from 'grommet-icons';\n\nclass InfoPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showHelp: false\n    };\n    this.activateHelp = this.activateHelp.bind(this);\n    this.deactivateHelp = this.deactivateHelp.bind(this);\n  }\n\n  render() {\n    return React.createElement(Box // justify all its content with the main axis\n    , {\n      justify: \"center\" // defines the direction of the central axis\n      ,\n      direction: \"row\" // make it appear on top of its background\n      ,\n      elevation: \"small\" // aligns itself (end - right side) with the immediate parent's central axis\n      ,\n      alignSelf: \"end\" // dimension with respect to its parent component\n      ,\n      width: \"7%\",\n      height: \"40%\" // giving the panel some space to breathe\n      ,\n      margin: {\n        top: \"8%\",\n        bottom: \"2%\",\n        right: \"2%\"\n      } // border definition to eccentuate this component\n      ,\n      border: {\n        \"color\": \"border\",\n        \"size\": \"medium\",\n        \"style\": \"groove\",\n        \"side\": \"all\"\n      } // background to make it stand out\n      ,\n      background: {\n        \"color\": \"brand\",\n        \"opacity\": \"strong\"\n      } // consistent rounded edges\n      ,\n      round: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Box, {\n      direction: \"column\",\n      justify: \"center\",\n      overflow: \"scroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: React.createElement(CircleQuestion, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      alignSelf: \"center\",\n      onClick: this.activateHelp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), this.state.showHelp && React.createElement(Layer, {\n      onEsc: () => this.deactivateHelp(),\n      onClickOutside: () => this.deactivateHelp(),\n      position: \"left\",\n      margin: {\n        \"left\": \"2%\"\n      },\n      gap: \"small\",\n      border: \"between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Box, {\n      height: \"small\",\n      overflow: \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Box, {\n      pad: \"xlarge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Corner position\"), React.createElement(Bar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      icon: React.createElement(Bar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      alignSelf: \"center\",\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      icon: React.createElement(Camera, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }),\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Button, {\n      icon: React.createElement(CirclePlay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }),\n      onClick: () => {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n  activateHelp() {\n    this.setState(function () {\n      return {\n        showHelp: true\n      };\n    });\n  }\n\n  deactivateHelp() {\n    this.setState({\n      showHelp: false\n    });\n  }\n\n}\n\nexport default InfoPanel;","map":{"version":3,"sources":["/mnt/c/Hackers/VTour/src/components/toursubcomponents/InfoPanel.js"],"names":["React","Box","Button","Layer","Bar","Camera","CirclePlay","CircleQuestion","InfoPanel","Component","constructor","props","state","showHelp","activateHelp","bind","deactivateHelp","render","top","bottom","right","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Button, Layer } from 'grommet';\nimport { Bar, Camera, CirclePlay, CircleQuestion } from 'grommet-icons';\n\nclass InfoPanel extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            showHelp : false\n        };\n\n        this.activateHelp = this.activateHelp.bind(this);\n        this.deactivateHelp = this.deactivateHelp.bind(this);        \n    }\n    \n    render(){\n        return(\n        <Box\n            // justify all its content with the main axis\n            justify = \"center\"\n\n            // defines the direction of the central axis\n            direction = \"row\"\n\n            // make it appear on top of its background\n            elevation = \"small\"\n            \n            // aligns itself (end - right side) with the immediate parent's central axis\n            alignSelf = \"end\"\n\n            // dimension with respect to its parent component\n            width = \"7%\"\n            height = \"40%\"\n\n            // giving the panel some space to breathe\n            margin = {{\n                top:\"8%\",\n                bottom:\"2%\",\n                right:\"2%\"\n            }}\n            // border definition to eccentuate this component\n            border={{\n                \"color\": \"border\",\n                \"size\": \"medium\",\n                \"style\": \"groove\",\n                \"side\": \"all\"\n              }}\n\n            // background to make it stand out\n            background = {{\n                \"color\": \"brand\",\n                \"opacity\": \"strong\"\n            }}\n\n            // consistent rounded edges\n            round = \"medium\"\n            >\n\n            <Box\n                direction=\"column\"\n                justify=\"center\"\n                overflow = \"scroll\"\n            >\n                <Box>\n                <Button\n                    icon={<CircleQuestion />}\n                    alignSelf = \"center\"\n                    onClick={this.activateHelp}\n                    />\n                {\n                    this.state.showHelp &&\n                    <Layer\n                        onEsc={() => this.deactivateHelp()}\n                        onClickOutside={() => this.deactivateHelp()}\n                        position = \"left\"                        \n                        margin={{ \"left\":\"2%\" }}\n                        gap=\"small\"\n                        border=\"between\"\n                        \n                        >\n                            <Box height=\"small\" overflow=\"auto\">\n                                <Box pad=\"xlarge\">Corner position</Box>\n                                <Bar />\n                            </Box>\n                    </Layer>\n                }\n                </Box>\n\n                <Button\n                    icon={<Bar />}\n                    alignSelf = \"center\"\n                    onClick={() => {}}\n                    />\n                <Button\n                    icon={<Camera />}\n                    onClick={() => {}}\n                />\n                <Button\n                    icon={<CirclePlay />}\n                    onClick={() => {}}\n                />\n            </Box>\n        </Box>)\n    }\n    activateHelp(){\n        this.setState( function() {\n            return {\n              showHelp : true\n            };\n        });\n    }\n\n    deactivateHelp(){\n        this.setState({\n            showHelp : false\n        });        \n    }\n}\n\nexport default InfoPanel;"]},"metadata":{},"sourceType":"module"}