{"ast":null,"code":"import Location from \"./Location\";\nexport default class User {\n  constructor() {\n    // initialise a start location for all users\n    this.Currentlocation = new Location().getStartPoint();\n  }\n  /**\n   * Changes the user's current location base on input direction\n   * @param {User input direction} direction \n   */\n\n\n  changeLocation(direction) {\n    console.log(\"direction input from user is \" + direction);\n\n    try {\n      let newLocation = this.Currentlocation.Move(direction);\n      console.log(\"User now moves to\" + newLocation.name);\n      this.Currentlocation = newLocation;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  getJuice() {\n    console.log(\"get juice\");\n  }\n\n  getPhotos() {\n    console.log(\"get photos\");\n  }\n\n  getVideos() {\n    console.log(\"get videos\");\n  }\n\n}","map":{"version":3,"sources":["/Users/bobby/Repositories/vtour/VTour-1/src/blogic/User.js"],"names":["Location","User","constructor","Currentlocation","getStartPoint","changeLocation","direction","console","log","newLocation","Move","name","err","getJuice","getPhotos","getVideos"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,IAAN,CAAW;AACtBC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,eAAL,GAAuB,IAAIH,QAAJ,GAAeI,aAAf,EAAvB;AACH;AAED;;;;;;AAIAC,EAAAA,cAAc,CAACC,SAAD,EAAW;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCF,SAA9C;;AACA,QAAI;AACA,UAAIG,WAAW,GAAG,KAAKN,eAAL,CAAqBO,IAArB,CAA0BJ,SAA1B,CAAlB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,WAAW,CAACE,IAA9C;AAEA,WAAKR,eAAL,GAAuBM,WAAvB;AACH,KAND,CAME,OAAOG,GAAP,EAAY;AACVL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH;AACJ;;AAEDC,EAAAA,QAAQ,GAAE;AACNN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;AAEDM,EAAAA,SAAS,GAAE;AACPP,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAEDO,EAAAA,SAAS,GAAE;AACPR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAjCqB","sourcesContent":["import Location from \"./Location\"\n\nexport default class User {\n    constructor(){\n        // initialise a start location for all users\n        this.Currentlocation = new Location().getStartPoint();\n    }\n\n    /**\n     * Changes the user's current location base on input direction\n     * @param {User input direction} direction \n     */\n    changeLocation(direction){\n        console.log(\"direction input from user is \" + direction)\n        try {\n            let newLocation = this.Currentlocation.Move(direction);\n            \n            console.log(\"User now moves to\" + newLocation.name)\n\n            this.Currentlocation = newLocation\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    getJuice(){ \n        console.log(\"get juice\")\n    }\n\n    getPhotos(){\n        console.log(\"get photos\")\n    }\n\n    getVideos(){\n        console.log(\"get videos\")\n    }\n}"]},"metadata":{},"sourceType":"module"}