{"ast":null,"code":"import Location from \"./Location\";\nimport React from \"react\";\nimport LocationData from './locationdata';\nexport default class User {\n  constructor() {\n    // initialise a start location for all users\n    this.Currentlocation = new Location().getStartPoint();\n  }\n  /**\n   * Changes the user's current location base on input direction\n   * @param {User input direction} direction \n   */\n\n\n  changeLocation(direction) {\n    try {\n      let newLocation = this.Currentlocation.Move(direction);\n      console.log(\"User now moves to\" + newLocation.name);\n      this.Currentlocation = newLocation;\n    } catch (err) {\n      console.log(\"Not a valid location\");\n    }\n  }\n\n  getJuice() {\n    return LocationData.Entrance.juice;\n  }\n\n  getPhotos() {\n    console.log(\"get photos\");\n  }\n\n  getVideos() {\n    console.log(\"get videos\");\n  }\n\n}","map":{"version":3,"sources":["/Users/michaeldinata/VTour/src/blogic/User.js"],"names":["Location","React","LocationData","User","constructor","Currentlocation","getStartPoint","changeLocation","direction","newLocation","Move","console","log","name","err","getJuice","Entrance","juice","getPhotos","getVideos"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,MAAMC,IAAN,CAAW;AACtBC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,eAAL,GAAuB,IAAIL,QAAJ,GAAeM,aAAf,EAAvB;AACH;AAED;;;;;;AAIAC,EAAAA,cAAc,CAACC,SAAD,EAAW;AACrB,QAAI;AACA,UAAIC,WAAW,GAAG,KAAKJ,eAAL,CAAqBK,IAArB,CAA0BF,SAA1B,CAAlB;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBH,WAAW,CAACI,IAA9C;AAEA,WAAKR,eAAL,GAAuBI,WAAvB;AACH,KAND,CAME,OAAOK,GAAP,EAAY;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ;;AAEDG,EAAAA,QAAQ,GAAE;AACN,WAAOb,YAAY,CAACc,QAAb,CAAsBC,KAA7B;AACH;;AAEDC,EAAAA,SAAS,GAAE;AACPP,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAEDO,EAAAA,SAAS,GAAE;AACPR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAhCqB","sourcesContent":["import Location from \"./Location\"\nimport React from \"react\"\nimport LocationData from './locationdata'\n\nexport default class User {\n    constructor(){\n        // initialise a start location for all users\n        this.Currentlocation = new Location().getStartPoint();\n    }\n\n    /**\n     * Changes the user's current location base on input direction\n     * @param {User input direction} direction \n     */\n    changeLocation(direction){\n        try {\n            let newLocation = this.Currentlocation.Move(direction);\n            \n            console.log(\"User now moves to\" + newLocation.name)\n\n            this.Currentlocation = newLocation\n        } catch (err) {\n            console.log(\"Not a valid location\")\n        }\n    }\n\n    getJuice(){ \n        return(LocationData.Entrance.juice)\n    }\n\n    getPhotos(){\n        console.log(\"get photos\")\n    }\n\n    getVideos(){\n        console.log(\"get videos\")\n    }\n}"]},"metadata":{},"sourceType":"module"}