{"ast":null,"code":"import AllLocations from \"./locationdata\";\nimport Location from \"./Location\";\nexport default class Map {\n  constructor() {\n    // init empty array\n    this.locationArray = [];\n    this.currentLocation;\n    console.log(AllLocations);\n\n    for (var key in AllLocations) {\n      if (AllLocations.hasOwnProperty(key)) {\n        // construct location object\n        let newLocation = new Location(AllLocations[key]); // bind Entrance to newLocation\n\n        if (newLocation.name == \"Entrance\") {\n          currentLocation = newLocation;\n        }\n\n        this.locationArray.push(newLocation);\n      }\n    }\n  }\n\n  getStartingLocation() {}\n\n  getAllLocations() {\n    return this.locationArray;\n  }\n\n  move(direction) {}\n\n}","map":{"version":3,"sources":["/Users/bobby/Repositories/vtour/VTour-1/src/blogic/Map.js"],"names":["AllLocations","Location","Map","constructor","locationArray","currentLocation","console","log","key","hasOwnProperty","newLocation","name","push","getStartingLocation","getAllLocations","move","direction"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,GAAN,CAAU;AACrBC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,eAAL;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;;AACA,SAAK,IAAIQ,GAAT,IAAgBR,YAAhB,EAA6B;AAEzB,UAAIA,YAAY,CAACS,cAAb,CAA4BD,GAA5B,CAAJ,EAAqC;AAEjC;AACA,YAAIE,WAAW,GAAG,IAAIT,QAAJ,CAAaD,YAAY,CAACQ,GAAD,CAAzB,CAAlB,CAHiC,CAKjC;;AACA,YAAIE,WAAW,CAACC,IAAZ,IAAoB,UAAxB,EAAmC;AAC/BN,UAAAA,eAAe,GAAGK,WAAlB;AACH;;AAED,aAAKN,aAAL,CAAmBQ,IAAnB,CAAwBF,WAAxB;AACH;AACJ;AACJ;;AAEDG,EAAAA,mBAAmB,GAAE,CAEpB;;AAEDC,EAAAA,eAAe,GAAE;AACb,WAAO,KAAKV,aAAZ;AACH;;AAEDW,EAAAA,IAAI,CAACC,SAAD,EAAW,CAEd;;AAlCoB","sourcesContent":["import AllLocations from \"./locationdata\"\nimport Location from \"./Location\"\n\nexport default class Map {\n    constructor(){\n        // init empty array\n        this.locationArray = [];\n        this.currentLocation;\n\n        console.log(AllLocations)\n        for( var key in AllLocations){\n\n            if (AllLocations.hasOwnProperty(key)){\n\n                // construct location object\n                let newLocation = new Location(AllLocations[key])\n\n                // bind Entrance to newLocation\n                if (newLocation.name == \"Entrance\"){\n                    currentLocation = newLocation\n                }\n\n                this.locationArray.push(newLocation);\n            }\n        }\n    }\n\n    getStartingLocation(){\n\n    }\n\n    getAllLocations(){\n        return this.locationArray\n    }\n\n    move(direction){\n        \n    }\n\n}"]},"metadata":{},"sourceType":"module"}