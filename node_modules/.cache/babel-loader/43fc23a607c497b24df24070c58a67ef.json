{"ast":null,"code":"import Location from \"./Location\";\nexport default class User {\n  constructor(location) {\n    // initialise a start location for all users\n    this.Currentlocation = new Location(location);\n  }\n  /**\n   * Changes the user's current location base on input direction\n   * @param {User input direction} direction \n   */\n\n\n  changeLocation(direction) {\n    try {\n      let newLocation = this.Currentlocation.Move(direction);\n      console.log(\"User now moves to\" + newLocation.name);\n      this.Currentlocation = newLocation;\n    } catch (err) {\n      console.log(\"Not a valid location\");\n    }\n  }\n\n  getJuice() {\n    console.log(\"get juice\");\n  }\n\n  getPhotos() {\n    console.log(\"get photos\");\n  }\n\n  getVideos() {\n    console.log(\"get videos\");\n  }\n\n}","map":{"version":3,"sources":["/Users/bobby/Repositories/vtour/VTour-1/src/blogic/User.js"],"names":["Location","User","constructor","location","Currentlocation","changeLocation","direction","newLocation","Move","console","log","name","err","getJuice","getPhotos","getVideos"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAIA,eAAe,MAAMC,IAAN,CAAW;AACtBC,EAAAA,WAAW,CAACC,QAAD,EAAU;AACjB;AACA,SAAKC,eAAL,GAAuB,IAAIJ,QAAJ,CAAaG,QAAb,CAAvB;AACH;AAED;;;;;;AAIAE,EAAAA,cAAc,CAACC,SAAD,EAAW;AACrB,QAAI;AACA,UAAIC,WAAW,GAAG,KAAKH,eAAL,CAAqBI,IAArB,CAA0BF,SAA1B,CAAlB;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBH,WAAW,CAACI,IAA9C;AAEA,WAAKP,eAAL,GAAuBG,WAAvB;AACH,KAND,CAME,OAAOK,GAAP,EAAY;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ;;AAEDG,EAAAA,QAAQ,GAAE;AACNJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;AAEDI,EAAAA,SAAS,GAAE;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAEDK,EAAAA,SAAS,GAAE;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAhCqB","sourcesContent":["import Location from \"./Location\"\n\n\n\nexport default class User {\n    constructor(location){\n        // initialise a start location for all users\n        this.Currentlocation = new Location(location);\n    }\n\n    /**\n     * Changes the user's current location base on input direction\n     * @param {User input direction} direction \n     */\n    changeLocation(direction){\n        try {\n            let newLocation = this.Currentlocation.Move(direction);\n            \n            console.log(\"User now moves to\" + newLocation.name)\n\n            this.Currentlocation = newLocation\n        } catch (err) {\n            console.log(\"Not a valid location\")\n        }\n    }\n\n    getJuice(){ \n        console.log(\"get juice\")\n    }\n\n    getPhotos(){\n        console.log(\"get photos\")\n    }\n\n    getVideos(){\n        console.log(\"get videos\")\n    }\n}"]},"metadata":{},"sourceType":"module"}